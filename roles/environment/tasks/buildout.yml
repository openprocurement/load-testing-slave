---
  - name: Setup buildout cache
    file: path={{ item.value }} state=directory recurse=yes
    tags:
    - all
    with_items:
      - { option: 'eggs-directory', value: '/home/{{ user_name }}/.buildout/eggs' }
      - { option: 'download-cache', value: '/home/{{ user_name }}/.buildout/downloads' }
      - { option: 'extends-cache', value: '/home/{{ user_name }}/.buildout/extends' }
    become: yes
    become_user: "{{ user_name }}"

  - name: Put buildout cache config
    ini_file: dest=/home/{{ user_name }}/.buildout/default.cfg create=yes section=buildout option={{ item.option }} value={{ item.value }} backup=yes
    tags:
    - all
    with_items:
      - { option: 'eggs-directory', value: '/home/{{ user_name }}/.buildout/eggs' }
      - { option: 'download-cache', value: '/home/{{ user_name }}/.buildout/downloads' }
      - { option: 'extends-cache', value: '/home/{{ user_name }}/.buildout/extends' }
    become: yes
    become_user: "{{ user_name }}"

  - name: Update buildout git files
    git:
       repo={{ buildout_repository_path }}
       dest=/home/{{ user_name }}/{{ buildout_path }}
       version={{ buildout_repository_version }}
       force=yes
    tags:
    - all
    - git
    become: yes
    become_user: "{{ user_name }}"

  - name: Put buildout.cfg
    template: src=buildout.cfg dest=/home/{{ user_name }}/{{buildout_path}}/buildout.cfg backup=yes
    no_log: false
    tags:
    - all
    - cfg
    become: yes
    become_user: "{{ user_name }}"

  - name: Is Bootstarped ?
    shell: test -f /home/{{ user_name }}/{{buildout_path}}/bin/buildout
    register: buildout_exists
    failed_when: False
    tags:
    - all
    become: yes
    become_user: "{{ user_name }}"

  - name: Run bootstrap
    shell: python bootstrap.py --setuptools-version 38.2.4 --buildout-version 2.10.0
      chdir=/home/{{ user_name }}/{{buildout_path}}
    when: buildout_exists.rc != 0
    tags:
    - all
    become: yes
    become_user: "{{ user_name }}"

  - name: Run Buildout
    shell: bin/buildout -N
      chdir=/home/{{ user_name }}/{{buildout_path}}
    register: result
    ignore_errors: True
    tags:
    - all
    - buildout
    become: yes
    become_user: "{{ user_name }}"

  - name: Circusd start
    shell: bin/circusd --daemon
      chdir=/home/{{ user_name }}/{{buildout_path}}
    tags:
    - all
    become: yes
    become_user: "{{ user_name }}"
